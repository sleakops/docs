"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1701],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),f=a,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905)),o=n(9378);const i={sidebar_label:"Accounts",sidebar_position:1},c="Accounts",l={unversionedId:"provider/accounts",id:"provider/accounts",title:"Accounts",description:"Provider's Accounts",source:"@site/docs/provider/accounts.mdx",sourceDirName:"provider",slug:"/provider/accounts",permalink:"/provider/accounts",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Accounts",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Providers",permalink:"/provider/"},next:{title:"Deleting a Provider",permalink:"/provider/deleting-a-provider"}},s={},u=[{value:"Provider&#39;s Accounts",id:"providers-accounts",level:2},{value:"Security Account",id:"security-account",level:3},{value:"<strong>Management Account</strong>",id:"management-account",level:3},{value:"<strong>Development Account</strong>",id:"development-account",level:3},{value:"Production Account",id:"production-account",level:3},{value:"Selecting an Account in SleakOps",id:"selecting-an-account-in-sleakops",level:3}],p={toc:u},d="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"accounts"},"Accounts"),(0,a.kt)("h2",{id:"providers-accounts"},"Provider's Accounts"),(0,a.kt)("p",null,"Sleakops implements a well-defined infrastructure architecture designed to optimize operational excellence while ensuring a secure and scalable environment for users. The architecture consists of four accounts, each serving distinct purposes and isolated from one another."),(0,a.kt)("p",null,"Each account has a VPN instance generated upon the creation of the first cluster."),(0,a.kt)("p",null,"Once the Accounts are up, we set to each one of them what we call ",(0,a.kt)("a",{parentName:"p",href:"https://www.notion.so/Network-Module-8878f087137540debda5660b2eaa0efa?pvs=21"},"Network Module"),"  it contains a lot of different AWS services that are used to make the network connections inside accounts."),(0,a.kt)(o.Z,{overlayBgColorEnd:"rgba(255, 255, 255, 0.8)",mdxType:"Zoom"},(0,a.kt)("img",{src:"/img/provider/aws/craftech-reference-architecture.png",alt:"reference-architecture"})),(0,a.kt)("h3",{id:"security-account"},"Security Account"),(0,a.kt)("p",null,"The Security Account serves as a centralized hub for managing IAM users and their access to the system. Learn how to switch between accounts in ",(0,a.kt)("a",{parentName:"p",href:"../user/aws_console_authentication"},"AWS Console Autentication"),"."),(0,a.kt)("h3",{id:"management-account"},(0,a.kt)("strong",{parentName:"h3"},"Management Account")),(0,a.kt)("p",null,"Designed to maintain internal services used for application maintenance, regardless of whether they are shared across accounts. Example: Sentry."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Contains an EKS cluster with integrated CI/CD (GitHub and HashiCorp Vault)."),(0,a.kt)("li",{parentName:"ul"},"Vault manages credentials for CloudWatch, enhancing monitoring capabilities."),(0,a.kt)("li",{parentName:"ul"},"VPC Peering enables private connections to other accounts.")),(0,a.kt)("h3",{id:"development-account"},(0,a.kt)("strong",{parentName:"h3"},"Development Account")),(0,a.kt)("p",null,"For the different stages of your application before it goes into production."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Contains three environments: dev, QA, and staging."),(0,a.kt)("li",{parentName:"ul"},"Replicas of the prod environment for code writing, testing, and pre-releases."),(0,a.kt)("li",{parentName:"ul"},"Ensures isolated testing to prevent issues for external users."),(0,a.kt)("li",{parentName:"ul"},"Similar architecture to prod but without RDS Slave for reduced high availability requirements.")),(0,a.kt)("h3",{id:"production-account"},"Production Account"),(0,a.kt)("p",null,"This account is intended for your application to be installed in a production environment, isolated from the rest of your application's stages."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Supports external users and requires a fully functional database (RDS Master)."),(0,a.kt)("li",{parentName:"ul"},"Utilizes Private DB Subnet for RDS Master, RDS Slave, and ElastiCache, each on different Availability Zones (AZs) for high availability."),(0,a.kt)("li",{parentName:"ul"},"Backend Deployment with replicas distributed across different AZs."),(0,a.kt)("li",{parentName:"ul"},"Frontend Deployment with LoadBalancer for even distribution of network load."),(0,a.kt)("li",{parentName:"ul"},"Route53 serves as DNS and performs health checks for the application."),(0,a.kt)("li",{parentName:"ul"},"AWS CloudFront serves static frontend content from an S3 bucket."),(0,a.kt)("li",{parentName:"ul"},"RDS Slave acts as a replica of RDS Master for failover scenarios, maximizing uptime.")),(0,a.kt)("h3",{id:"selecting-an-account-in-sleakops"},"Selecting an Account in SleakOps"),(0,a.kt)("div",{style:{display:"flex",alignItems:"flex-start"}},(0,a.kt)("img",{src:"/img/provider/provideraccountselect.png",alt:"reference-architecture",style:{marginRight:"20px",maxWidth:"200px"}}),(0,a.kt)("div",null,(0,a.kt)("p",null,"To select an account and be able to work on it, select it from the left pane."),(0,a.kt)("p",null,"The left icon refers to the Provider that groups the accounts."))))}f.isMDXComponent=!0}}]);