"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5333],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>v});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),f=i,v=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return r?n.createElement(v,a(a({ref:t},p),{},{components:r})):n.createElement(v,a({ref:t},p))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9178:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const o={sidebar_label:"Basic Concepts",sidebar_position:2},a="Basic Concepts",s={unversionedId:"basicconcepts",id:"basicconcepts",title:"Basic Concepts",description:"Provider",source:"@site/docs/basicconcepts.mdx",sourceDirName:".",slug:"/basicconcepts",permalink:"/basicconcepts",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_label:"Basic Concepts",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction to Sleakops",permalink:"/"},next:{title:"Getting Started",permalink:"/gettingstarted"}},c={},l=[{value:"Provider",id:"provider",level:3},{value:"Cluster",id:"cluster",level:3},{value:"Environment",id:"environment",level:3},{value:"Project",id:"project",level:3},{value:"Service",id:"service",level:3},{value:"Dependency",id:"dependency",level:3},{value:"Var Group",id:"var-group",level:3},{value:"Build",id:"build",level:3},{value:"Deploy",id:"deploy",level:3}],p={toc:l},d="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basic-concepts"},"Basic Concepts"),(0,i.kt)("h3",{id:"provider"},"Provider"),(0,i.kt)("p",null,"As the first step to start an infrastructure is to decide which cloud provider to use (AWS, Azure or GCP, etc.), in SleakOps a Provider represents the selection of one of this cloud providers, the credentials granted to SleakOps to it and the set of accounts created in order to properly manage the infrastructure. It is composed by an Organizative Unit on AWS and its accounts. "),(0,i.kt)("h3",{id:"cluster"},"Cluster"),(0,i.kt)("p",null,"A Kubernetes cluster is a distributed system for managing containerized applications. It consists of nodes (physical or virtual machines) running pods (groups of one or more containers). A central control plane, composed of various software components, coordinates the activity of the nodes and manages the lifecycle of the pods."),(0,i.kt)("h3",{id:"environment"},"Environment"),(0,i.kt)("p",null,"In computing, an environment or namespace typically refers to an isolated area where specific resources, applications, or services operate independently. This isolation enhances organization, security, and resource management within larger systems or platforms."),(0,i.kt)("h3",{id:"project"},"Project"),(0,i.kt)("p",null,"A project is a collection of files and code managed using Git, representing a codebase within a git repository. "),(0,i.kt)("h3",{id:"service"},"Service"),(0,i.kt)("p",null,"A ",(0,i.kt)("strong",{parentName:"p"},"service")," is a fundamental unit of functionality that can be independently deployed and managed within an environment. Services perform specific tasks or processes, interacting with other services via defined interfaces. They are scalable and modular, forming the building blocks of architectures like microservices and service-oriented architectures (SOA), allowing for flexible and efficient system development."),(0,i.kt)("h3",{id:"dependency"},"Dependency"),(0,i.kt)("p",null,"A dependency is an external resource or service that an application requires to function properly in a cloud environment. These dependencies include various infrastructure components such as relational databases, storage services, and caches. Each dependency is associated with provider-specific services, ensuring seamless integration and operation within the cloud platform."),(0,i.kt)("h3",{id:"var-group"},"Var Group"),(0,i.kt)("p",null,"In Sleakops, a ",(0,i.kt)("strong",{parentName:"p"},"variable group")," (or ",(0,i.kt)("strong",{parentName:"p"},"var group"),") is a set of key-value pairs, similar to a dictionary, that provides configuration settings for services within a specific project and environment. "),(0,i.kt)("h3",{id:"build"},"Build"),(0,i.kt)("p",null,"A build is the process of creating a new version of your application's code as a container image from a Dockerfile, incorporating the compiled code and necessary dependencies."),(0,i.kt)("h3",{id:"deploy"},"Deploy"),(0,i.kt)("p",null,"In technology, to ",(0,i.kt)("strong",{parentName:"p"},"deploy")," means to release a software application, service, or update to a production environment, making it available for use by end-users."))}u.isMDXComponent=!0}}]);